" Don't try to be vi compatible
set nocompatible

" Helps force plugins to load correctly when it is turned back on below
filetype off

" ============== Vundle =============================

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

" ========== Vundle Appearance ==============
Bundle "chrisbra/color_highlight.git"
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
Plugin 'airblade/vim-gitgutter'
Bundle "jby/tmux.vim.git"
Bundle "morhetz/gruvbox"
Bundle "chriskempson/base16-vim"
Plugin 'kristijanhusak/vim-hybrid-material'

" Required for Gblame in terminal vim
Bundle "godlygeek/csapprox.git"

Bundle "jistr/vim-nerdtree-tabs.git"
Bundle "scrooloose/nerdtree.git"
Bundle "ctrlpvim/ctrlp.vim"
Bundle "xolox/vim-misc"
Bundle "xolox/vim-session"
Bundle "tpope/vim-fugitive"
Bundle "christoomey/vim-tmux-navigator"
Bundle "MarcWeber/vim-addon-mw-utils.git"
Bundle "sjl/gundo.vim"
Bundle "vim-scripts/AutoTag.git"
Plugin 'xolox/vim-easytags'
Plugin 'majutsushi/tagbar'

" =========== Vundle Search ================
Bundle "justinmk/vim-sneak"
Bundle "rking/ag.vim"
Bundle "vim-scripts/IndexedSearch"
Bundle "nelstrom/vim-visual-star-search"
Bundle "skwp/greplace.vim"
Bundle "Lokaltog/vim-easymotion"

" ============ Language =======================
Bundle 'sheerun/vim-polyglot'
Bundle 'jtratner/vim-flavored-markdown.git'
Bundle 'scrooloose/syntastic.git'
Bundle 'nelstrom/vim-markdown-preview'

Bundle 'Shougo/neocomplete'
Plugin 'Shougo/neosnippet'
Plugin 'Shougo/neosnippet-snippets'

" All of your Plugins must be added before the following line
call vundle#end()            " required

" Turn on syntax highlighting
syntax on

" For plugins to load correctly
filetype plugin indent on

" ============== Leader ============================
let mapleader = ","

" ================ Scrolling ========================

set scrolloff=8         "Start scrolling when we're 8 lines away from margins
set sidescrolloff=15
set sidescroll=1

" ================ Search ===========================

set incsearch       " Find the next match as we type the search
set hlsearch        " Highlight searches by default
set ignorecase      " Ignore case when searching...
set smartcase       " ...unless we type a capital

set modelines=0
set number              " Show line numbers
set ruler               " Show file stats
set visualbell          " Blink cursor on error instead of beeping (grr)
set encoding=utf-8      " Encoding
set wildmenu            " visual autocomplete for command menu

" ============ Whitespace ===========================
set wrap
set textwidth=79
set formatoptions=tcqrn1
set softtabstop=4
set expandtab
set noshiftround
set tabstop=4
set shiftwidth=4
set expandtab

" ============ Cursor motion =========================
set scrolloff=3
set backspace=indent,eol,start
set matchpairs+=<:> " use % to jump between pairs

" Move up/down editor lines
nnoremap j gj
nnoremap k gk
set hidden          " Allow hidden buffers
set lazyredraw      " redraw only when we need to.

" =========== Search ==================================
set incsearch           " search as characters are entered
set hlsearch            " highlight matches
nnoremap <leader><space> :nohlsearch<CR>  " turn off search highlight

" =========== Folding =================================
set foldenable          " enable folding
set foldlevelstart=10   " open most folds by default
nnoremap <space> za     " space open/closes folds
set foldmethod=indent   " fold based on indent level

" =========== CtrlP settings ==========================
let g:ctrlp_match_window = 'bottom,order:ttb'
let g:ctrlp_switch_buffer = 0
let g:ctrlp_working_path_mode = 0
let g:ctrlp_user_command = 'ag %s -l --nocolor --hidden -g ""'

" All yanking and pasting works with the actual system clipboard. Does not
" work with all vim version but other ways to achieve this behaviour also
" exist and will be added if necessary.
set clipboard=unnamed

" =================== AutoGroups ======================
augroup configgroup
    autocmd!
    autocmd VimEnter * highlight clear SignColumn
    autocmd BufWritePre *.php,*.py,*.js,*.txt,*.hs,*.java,*.md
                \:call <SID>StripTrailingWhitespaces()
    autocmd FileType java setlocal noexpandtab
    autocmd FileType java setlocal list
    autocmd FileType java setlocal listchars=tab:+\ ,eol:-
    autocmd FileType java setlocal formatprg=par\ -w80\ -T4
    autocmd FileType php setlocal expandtab
    autocmd FileType php setlocal list
    autocmd FileType php setlocal listchars=tab:+\ ,eol:-
    autocmd FileType php setlocal formatprg=par\ -w80\ -T4
    autocmd FileType ruby setlocal tabstop=2
    autocmd FileType ruby setlocal shiftwidth=2
    autocmd FileType ruby setlocal softtabstop=2
    autocmd FileType ruby setlocal commentstring=#\ %s
    autocmd FileType python setlocal commentstring=#\ %s
    autocmd BufEnter *.cls setlocal filetype=java
    autocmd BufEnter *.zsh-theme setlocal filetype=zsh
    autocmd BufEnter Makefile setlocal noexpandtab
    autocmd BufEnter *.sh setlocal tabstop=2
    autocmd BufEnter *.sh setlocal shiftwidth=2
    autocmd BufEnter *.sh setlocal softtabstop=2
augroup END

" Enable omni completion.

let g:acp_enableAtStartup = 0
let g:neocomplete#enable_at_startup = 1
let g:neocomplete#enable_camel_case = 1
let g:neocomplete#enable_smart_case = 1
set completeopt-=preview
autocmd FileType css setlocal omnifunc=csscomplete#CompleteCSS
autocmd FileType html,markdown setlocal omnifunc=htmlcomplete#CompleteTags
autocmd FileType javascript setlocal omnifunc=javascriptcomplete#CompleteJS
autocmd FileType python setlocal omnifunc=pythoncomplete#Complete
autocmd FileType xml setlocal omnifunc=xmlcomplete#CompleteTags
autocmd FileType ruby setlocal omnifunc=rubycomplete#Complete

" ----- xolox/vim-easytags settings -----
" Where to look for tags files
set tags=./tags;,~/.vimtags
" Sensible defaults
let g:easytags_events = ['BufReadPost', 'BufWritePost']
let g:easytags_async = 1
let g:easytags_dynamic_files = 2
let g:easytags_resolve_links = 1
let g:easytags_suppress_ctags_warning = 1

" ----- majutsushi/tagbar settings -----
" Open/close tagbar with \b
nmap <silent> <leader>b :TagbarToggle<CR>
" Uncomment to open tagbar automatically whenever possible
"autocmd BufEnter * nested :call tagbar#autoopen(0)



" ================= Backups ===========================
set backup
set backupdir=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp
set backupskip=/tmp/*,/private/tmp/*
set directory=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp
set writebackup

colorscheme gruvbox

let g:airline_powerline_fonts = 1
let g:airline_theme = "gruvbox"

" ----- scrooloose/syntastic settings -----
let g:syntastic_error_symbol = '✘'
let g:syntastic_warning_symbol = "▲"
augroup mySyntastic
  au!
  au FileType tex let b:syntastic_mode = "passive"
augroup END

"mark syntax errors with :signs
let g:syntastic_enable_signs=1
"automatically jump to the error when saving the file
let g:syntastic_auto_jump=0
"show the error list automatically
let g:syntastic_auto_loc_list=1
"don't care about warnings
let g:syntastic_quiet_messages = {'level': 'warnings'}

let g:nerdtree_tabs_open_on_console_startup=1

" For mouse click in NERDTree
set mouse=a
let g:NERDTreeMouseMode=3
" let g:pymode = 1
